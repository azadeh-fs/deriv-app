{"version":3,"sources":["webpack:///./templates/_common/components/loading.jsx","webpack:////Users/zaki/Documents/Projects/binary-site/staging/deriv-app/packages/components/lib/money.js","webpack:///./App/Containers/RealAccountSignup/upgrade-button.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./App/Components/Layout/Header/account-info.jsx"],"names":["Loading","className","is_invisible","theme","id","classNames","invisible","Array","from","map","x","inx","key","n","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__19__","e","t","r","exports","a","i","l","call","m","c","d","o","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","0","module","eval","1","19","2","35","__webpack_require__","53","__webpack_exports__","icon","onClick","UpgradeButton","text","PropTypes","string","header","AccountList","currency","currency_icon","display_type","has_balance","has_demo_text","is_disabled","onClickAccount","selected_loginid","loginid","undefined","account_type","CurrencyUtils","CurrencyDisplay","is_virtual","AccountSwitcher","is_dmt5_visible","setState","section","state","wrapper_ref","this","handleClickOutside","handleLogout","is_positions_drawer_on","togglePositionsDrawer","redirectToMt5","props","toggleAccountsDialog","history","onClickUpgrade","updateMt5LoginList","is_loading_mt5","is_logged_in","display","sorted_account_list","account","account_loginid","has_add_button","can_upgrade","is_mt5_allowed","sorted_mt5_list","login","redirectToMt5Real","has_mt5_login","localize","obj_total_balance","b_currency","a_currency","a_is_fiat","b_is_crypto","mt5_login_list","React","Component","account_list","accounts","is_upgrade_enabled","is_visible","toggle","withRouter","connect","client","has_fiat","can_change_currency","switchAccount","logoutClient","logout","openRealAccountSignup","ui","account_switcher","AccountInfo","showDialog","hideDialog","balance","is_dialog_on","toggleDialog","type","toLowerCase","i18n_default_text","in","timeout","enter","enterDone","exit","onEntered","unmountOnExit","propTypes","bool","func"],"mappings":"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","file":"js/core.account-info.0ca5685cabaea671b0a3.js","sourcesContent":["import classNames from 'classnames';\nimport React      from 'react';\n\nconst Loading = ({ className, is_invisible, theme, id }) => (\n    <div\n        id={id}\n        className={\n            classNames(\n                'barspinner',\n                `barspinner--${ theme || 'dark'}`,\n                { invisible: is_invisible },\n                className,\n            )\n        }\n    >\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","!function(e,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n(require(\"react\"),require(\"prop-types\"),require(\"classnames\"),require(\"deriv-shared/utils/currency\")):\"function\"==typeof define&&define.amd?define([\"react\",\"prop-types\",\"classnames\",\"deriv-shared/utils/currency\"],n):\"object\"==typeof exports?exports.money=n(require(\"react\"),require(\"prop-types\"),require(\"classnames\"),require(\"deriv-shared/utils/currency\")):(e[\"deriv-component\"]=e[\"deriv-component\"]||{},e[\"deriv-component\"].money=n(e.react,e[\"prop-types\"],e.classnames,e[\"deriv-shared/utils/currency\"]))}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__1__,__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__19__){return function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=53)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJyZWFjdFwiPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX18wX187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__1__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJwcm9wLXR5cGVzXCI/MzgzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzFfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///1\\n\")},19:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__19__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdL2V4dGVybmFsIFwiZGVyaXYtc2hhcmVkL3V0aWxzL2N1cnJlbmN5XCI/NGNiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzE5X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///19\\n\")},2:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__2__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCI/YWFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzJfXzsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},35:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvbW9uZXkvbW9uZXkuc2Nzcz9jZjE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1NzU1OTg3MzA5NzdcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7O1xuICAgIH1cbiAgIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGdDQUtBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///35\\n\")},53:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \"classnames\"\\nvar external_classnames_ = __webpack_require__(2);\\nvar external_classnames_default = /*#__PURE__*/__webpack_require__.n(external_classnames_);\\n\\n// EXTERNAL MODULE: external \"prop-types\"\\nvar external_prop_types_ = __webpack_require__(1);\\nvar external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);\\n\\n// EXTERNAL MODULE: external \"react\"\\nvar external_react_ = __webpack_require__(0);\\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\\n\\n// EXTERNAL MODULE: external \"deriv-shared/utils/currency\"\\nvar currency_ = __webpack_require__(19);\\nvar currency_default = /*#__PURE__*/__webpack_require__.n(currency_);\\n\\n// CONCATENATED MODULE: ./src/components/money/money.jsx\\n\\n\\n\\n\\n\\nvar money_Money = function Money(_ref) {\\n  var amount = _ref.amount,\\n      className = _ref.className,\\n      _ref$currency = _ref.currency,\\n      currency = _ref$currency === void 0 ? \\'USD\\' : _ref$currency,\\n      has_sign = _ref.has_sign,\\n      _ref$should_format = _ref.should_format,\\n      should_format = _ref$should_format === void 0 ? true : _ref$should_format;\\n  var sign = \\'\\';\\n\\n  if (+amount && (amount < 0 || has_sign)) {\\n    sign = amount > 0 ? \\'+\\' : \\'-\\';\\n  } // if it\\'s formatted already then don\\'t make any changes unless we should remove extra -/+ signs\\n\\n\\n  var value = has_sign || should_format ? Math.abs(amount) : amount;\\n  var final_amount = should_format ? currency_default.a.formatMoney(currency, value, true) : value;\\n  return external_react_default.a.createElement(external_react_default.a.Fragment, null, has_sign && sign, external_react_default.a.createElement(\"span\", {\\n    className: external_classnames_default()(className, \\'symbols\\', \"symbols--\".concat(currency.toLowerCase()))\\n  }), final_amount);\\n};\\n\\nmoney_Money.propTypes = {\\n  amount: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string]),\\n  className: external_prop_types_default.a.string,\\n  currency: external_prop_types_default.a.string,\\n  has_sign: external_prop_types_default.a.bool,\\n  should_format: external_prop_types_default.a.bool\\n};\\n/* harmony default export */ var money = (money_Money);\\n// EXTERNAL MODULE: ./src/components/money/money.scss\\nvar money_money = __webpack_require__(35);\\n\\n// CONCATENATED MODULE: ./src/components/money/index.js\\n\\n\\n/* harmony default export */ var components_money = __webpack_exports__[\"default\"] = (money);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvbW9uZXkvbW9uZXkuanN4P2QyYmYiLCJ3ZWJwYWNrOi8vZGVyaXYtY29tcG9uZW50LltuYW1lXS8uL3NyYy9jb21wb25lbnRzL21vbmV5L2luZGV4LmpzP2UyMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgICAgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzICAgICBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCAgICAgICAgIGZyb20gJ3JlYWN0JztcbmltcG9ydCBDdXJyZW5jeVV0aWxzIGZyb20gJ2Rlcml2LXNoYXJlZC91dGlscy9jdXJyZW5jeSc7XG5cbmNvbnN0IE1vbmV5ID0gKHtcbiAgICBhbW91bnQsXG4gICAgY2xhc3NOYW1lLFxuICAgIGN1cnJlbmN5ID0gJ1VTRCcsXG4gICAgaGFzX3NpZ24sXG4gICAgc2hvdWxkX2Zvcm1hdCA9IHRydWUsXG59KSA9PiB7XG4gICAgbGV0IHNpZ24gPSAnJztcbiAgICBpZiAoK2Ftb3VudCAmJiAoYW1vdW50IDwgMCB8fCBoYXNfc2lnbikpIHtcbiAgICAgICAgc2lnbiA9IGFtb3VudCA+IDAgPyAnKycgOiAnLSc7XG4gICAgfVxuXG4gICAgLy8gaWYgaXQncyBmb3JtYXR0ZWQgYWxyZWFkeSB0aGVuIGRvbid0IG1ha2UgYW55IGNoYW5nZXMgdW5sZXNzIHdlIHNob3VsZCByZW1vdmUgZXh0cmEgLS8rIHNpZ25zXG4gICAgY29uc3QgdmFsdWUgPSAoaGFzX3NpZ24gfHwgc2hvdWxkX2Zvcm1hdCkgPyBNYXRoLmFicyhhbW91bnQpIDogYW1vdW50O1xuICAgIGNvbnN0IGZpbmFsX2Ftb3VudCA9IHNob3VsZF9mb3JtYXQgPyBDdXJyZW5jeVV0aWxzLmZvcm1hdE1vbmV5KGN1cnJlbmN5LCB2YWx1ZSwgdHJ1ZSkgOiB2YWx1ZTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIHtoYXNfc2lnbiAmJiBzaWdufVxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ3N5bWJvbHMnLCBgc3ltYm9scy0tJHtjdXJyZW5jeS50b0xvd2VyQ2FzZSgpfWApfSAvPlxuICAgICAgICAgICAge2ZpbmFsX2Ftb3VudH1cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApO1xufTtcblxuTW9uZXkucHJvcFR5cGVzID0ge1xuICAgIGFtb3VudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgICAgIFByb3BUeXBlcy5udW1iZXIsXG4gICAgICAgIFByb3BUeXBlcy5zdHJpbmcsXG4gICAgXSksXG4gICAgY2xhc3NOYW1lICAgIDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjdXJyZW5jeSAgICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGhhc19zaWduICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIHNob3VsZF9mb3JtYXQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTW9uZXk7XG4iLCJpbXBvcnQgTW9uZXkgZnJvbSAnLi9tb25leS5qc3gnO1xuaW1wb3J0ICAgICAgICAgICAgJy4vbW9uZXkuc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IE1vbmV5O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBUkE7QUFXQTs7Ozs7QUN6Q0E7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///53\\n')}}).default});","import { Button } from 'deriv-components';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UpgradeButton = ({ children, onClick, icon }) => (\n    <div className='acc-switcher__new-account'>\n        <Button\n            id='upgrade-account'\n            onClick={onClick}\n            className='acc-switcher__new-account-link'\n            tertiary\n            icon={icon}\n        >\n            {children}\n        </Button>\n    </div>\n);\n\nUpgradeButton.propTypes = {\n    icon   : PropTypes.node,\n    onClick: PropTypes.func,\n    text   : PropTypes.string,\n};\n\nexport default UpgradeButton;\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { withRouter }         from 'react-router';\nimport {\n    Money,\n    Popover,\n    ThemedScrollbars }        from 'deriv-components';\nimport CurrencyUtils          from 'deriv-shared/utils/currency';\nimport { localize, Localize } from 'deriv-translations';\nimport { urlFor }             from '_common/url';\nimport UpgradeButton          from 'App/Containers/RealAccountSignup/upgrade-button.jsx';\nimport Icon                   from 'Assets/icon.jsx';\nimport { connect }            from 'Stores/connect';\nimport routes                 from 'Constants/routes';\nimport {\n    getMT5AccountDisplay,\n    getMT5AccountType }       from 'Stores/Helpers/client';\nimport Loading                from '../../../templates/_common/components/loading.jsx';\n\nconst AccountWrapper = ({\n    children,\n    header,\n    is_visible,\n    toggleVisibility,\n}) => (\n    <React.Fragment>\n        <div\n            className={classNames('acc-switcher', { 'acc-info--show': !is_visible })}\n            onClick={toggleVisibility}\n        >\n            <span className='acc-switcher__list-title'>\n                {header}\n            </span>\n            <Icon icon='IconArrow' className='acc-info__select-arrow' />\n        </div>\n        {is_visible &&\n            <React.Fragment>\n                {children}\n            </React.Fragment>\n        }\n    </React.Fragment>\n);\n\nconst AccountList = ({\n    account_type,\n    balance,\n    currency,\n    currency_icon,\n    display_type,\n    has_balance,\n    has_demo_text,\n    is_disabled,\n    is_virtual,\n    loginid,\n    onClickAccount,\n    selected_loginid,\n}) => (\n    <Popover alignment='left' message={loginid}>\n        <div\n            id={`dt_${loginid}`}\n            className={classNames('acc-switcher__account', {\n                'acc-switcher__account--selected' : loginid === selected_loginid,\n                'acc-switcher__account--disabled' : is_disabled,\n                'acc-switcher__account--demo-text': has_demo_text,\n            })}\n            onClick={is_disabled ? undefined : onClickAccount}\n        >\n            <span className={'acc-switcher__id'}>\n                <Icon\n                    icon='IconAccountsCurrency'\n                    className={`acc-switcher__id-icon acc-switcher__id-icon--${currency_icon}`}\n                    type={currency_icon}\n                />\n                <span>\n                    {display_type === 'currency'\n                        ? <CurrencyDisplay is_virtual={is_virtual} currency={currency_icon} />\n                        : <AccountDisplay is_virtual={has_demo_text} account_type={account_type} />\n                    }\n                </span>\n                {has_balance &&\n                <span className={classNames('acc-switcher__balance', { 'acc-switcher__balance--virtual': is_virtual || has_demo_text })}>\n                    {currency &&\n                    <Money\n                        currency={currency}\n                        amount={CurrencyUtils.formatMoney(currency, balance, true)}\n                        should_format={false}\n                    />\n                    }\n                    {!currency &&\n                    <span className='no-currency'>\n                        <Localize i18n_default_text='No currency assigned' />\n                    </span>\n                    }\n                </span>\n                }\n            </span>\n        </div>\n    </Popover>\n);\n\nconst CurrencyDisplay = ({\n    currency,\n    is_virtual,\n}) => {\n    if (is_virtual) {\n        return <Localize i18n_default_text='Demo' />;\n    }\n    if (currency.toUpperCase() === 'REAL') {\n        return <Localize i18n_default_text='Real' />;\n    }\n    return currency.toUpperCase();\n};\n\nconst AccountDisplay = ({\n    account_type,\n    is_virtual,\n}) => (\n    <React.Fragment>\n        {is_virtual &&\n        <div className='acc-switcher__demo-text'>\n            <Localize i18n_default_text='Demo' />\n        </div>\n        }\n        <div>\n            {getMT5AccountDisplay(account_type)}\n        </div>\n    </React.Fragment>\n);\n\nconst ButtonAddAccount = ({\n    onClick,\n    text,\n}) => (\n    <UpgradeButton\n        onClick={onClick}\n        icon={<Icon icon='IconAdd' />}\n    >\n        {text}\n    </UpgradeButton>\n);\n\nclass AccountSwitcher extends React.Component {\n    state = {\n        is_deriv_visible: true,\n        is_dmt5_visible : true,\n    };\n\n    toggleVisibility = (section) => {\n        this.setState({ [`is_${section}_visible`]: !this.state[`is_${section}_visible`] });\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        this.props.logoutClient();\n    };\n\n    redirectToMt5 = (account_type) => {\n        this.props.toggleAccountsDialog();\n        this.props.history.push(`${routes.mt5}#${account_type}`);\n    };\n\n    redirectToMt5Real = () => {\n        this.redirectToMt5('real');\n    };\n\n    redirectToMt5Demo = () => {\n        this.redirectToMt5('demo');\n    };\n\n    onClickUpgrade = () => {\n        if (this.props.can_upgrade_to === 'svg') {\n            this.props.openRealAccountSignup();\n        } else {\n            window.open(urlFor('new_account/maltainvestws', undefined, undefined, true));\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.props.updateMt5LoginList();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.props.hideDialog();\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    get can_manage_currency () {\n        return this.props.can_change_currency ||\n            (!this.props.is_virtual && !this.props.has_fiat && this.props.can_upgrade_to);\n    }\n\n    get sorted_account_list() {\n        // sort accounts as follows:\n        // top is fiat, then crypto (each alphabetically by currency), then demo\n        return this.props.account_list.slice().sort((a, b) => {\n            const a_currency = this.props.accounts[a.loginid].currency;\n            const b_currency = this.props.accounts[b.loginid].currency;\n            const a_is_crypto = CurrencyUtils.isCryptocurrency(a_currency);\n            const b_is_crypto = CurrencyUtils.isCryptocurrency(b_currency);\n            const a_is_fiat = !a_is_crypto;\n            const b_is_fiat = !b_is_crypto;\n            if (a.is_virtual || b.is_virtual) {\n                return a.is_virtual ? 1 : -1;\n            } else if ((a_is_crypto && b_is_crypto) || (a_is_fiat && b_is_fiat)) {\n                return a_currency < b_currency ? -1 : 1;\n            } else if (a_is_fiat && b_is_crypto) {\n                return -1;\n            }\n            return 1;\n        });\n    }\n\n    get sorted_mt5_list() {\n        // for MT5, standard, advanced, then synthetic indices\n        return this.props.mt5_login_list.slice().sort((a, b) => {\n            if (/demo/.test(a.group) && !/demo/.test(b.group)) {\n                return 1;\n            }\n            if (/demo/.test(b.group) && !/demo/.test(a.group)) {\n                return -1;\n            }\n            if (/vanuatu/.test(a.group)) {\n                return -1;\n            }\n            if (/svg/.test(a.group)) {\n                return 1;\n            }\n            return -1;\n        });\n    }\n\n    get can_upgrade () {\n        return !!(this.props.is_upgrade_enabled && this.props.is_virtual && this.props.can_upgrade_to);\n    }\n\n    get has_add_button() {\n        return this.can_upgrade || this.can_manage_currency;\n    }\n\n    get total_assets() {\n        return this.props.obj_total_balance.amount_real + this.props.obj_total_balance.amount_mt5;\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef} style={{ display: this.props.display }}>\n                <ThemedScrollbars\n                    autoHeight\n                    autoHide\n                    autoHeightMax={462}\n                    renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                    renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                >\n                    <div className='acc-switcher__list-wrapper'>\n                        <div>\n                            <AccountWrapper\n                                header={<Localize i18n_default_text='Deriv Accounts' />}\n                                is_visible={this.state.is_deriv_visible}\n                                toggleVisibility={() => { this.toggleVisibility('deriv'); }}\n                            >\n                                <div className='acc-switcher__accounts'>\n                                    {this.sorted_account_list.map((account) => (\n                                        <AccountList\n                                            key={account.loginid}\n                                            balance={this.props.accounts[account.loginid].balance}\n                                            currency={this.props.accounts[account.loginid].currency}\n                                            currency_icon={account.icon}\n                                            display_type={'currency'}\n                                            has_balance={'balance' in this.props.accounts[account.loginid]}\n                                            is_disabled={account.is_disabled}\n                                            is_virtual={account.is_virtual}\n                                            loginid={account.loginid}\n                                            onClickAccount={account.is_disabled\n                                                ? undefined\n                                                : this.doSwitch.bind(this, account.loginid)}\n                                            selected_loginid={this.props.account_loginid}\n                                        />\n                                    ))}\n                                </div>\n                                {this.has_add_button &&\n                                <ButtonAddAccount\n                                    onClick={this.can_upgrade ? this.onClickUpgrade : this.props.openRealAccountSignup}\n                                    text={<Localize i18n_default_text='Add Deriv account' />}\n                                />\n                                }\n                            </AccountWrapper>\n                        </div>\n                        {this.props.is_mt5_allowed &&\n                            <div>\n                                <AccountWrapper\n                                    header={<Localize i18n_default_text='DMT5 Accounts' />}\n                                    is_visible={this.state.is_dmt5_visible}\n                                    toggleVisibility={() => { this.toggleVisibility('dmt5'); }}\n                                >\n                                    {this.props.is_loading_mt5 ?\n                                        <Loading className='acc-switcher__loader' />\n                                        :\n                                        <React.Fragment>\n                                            {this.props.has_mt5_login ?\n                                                <div className='acc-switcher__accounts'>\n                                                    {this.sorted_mt5_list.map((account) => (\n                                                        <AccountList\n                                                            key={account.login}\n                                                            account_type={account.group}\n                                                            balance={account.balance}\n                                                            currency={account.currency}\n                                                            currency_icon={getMT5AccountType(account.group).replace(/^demo/, 'real')}\n                                                            has_balance={'balance' in account}\n                                                            has_demo_text={/^demo/.test(account.group)}\n                                                            loginid={account.login}\n                                                            onClickAccount={/^demo/.test(account.group) ? this.redirectToMt5Demo : this.redirectToMt5Real}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                :\n                                                <ButtonAddAccount\n                                                    onClick={this.redirectToMt5Real}\n                                                    text={<Localize i18n_default_text='Add DMT5 account' />}\n                                                />\n                                            }\n                                        </React.Fragment>\n                                    }\n                                </AccountWrapper>\n                            </div>\n                        }\n                    </div>\n                </ThemedScrollbars>\n\n                <div className='acc-switcher__separator' />\n\n                <div className='acc-switcher__total'>\n                    <span>\n                        <Localize i18n_default_text='Total assets' />\n                    </span>\n                    <Popover\n                        alignment='bottom'\n                        message={this.props.has_mt5_login\n                            ? localize('Total assets in your Deriv and DMT5 accounts (excluding demo accounts).')\n                            : localize('Total assets in your Deriv accounts (excluding demo accounts).')\n                        }\n                    >\n                        <Icon icon='IconInfoOutline' className='acc-switcher__total-icon' />\n                    </Popover>\n                    <span className='acc-switcher__balance'>\n                        <Money\n                            currency={this.props.obj_total_balance.currency}\n                            amount={\n                                CurrencyUtils.formatMoney(\n                                    this.props.obj_total_balance.currency,\n                                    this.total_assets,\n                                    true\n                                )\n                            }\n                            should_format={false}\n                        />\n                    </span>\n                </div>\n\n                <div className='acc-switcher__separator' />\n\n                <div id='dt_logout_button' className='acc-switcher__logout'>\n                    <span className='acc-switcher__logout-text' onClick={this.handleLogout}>{localize('Log out')}</span>\n                    <Icon icon='IconLogout' className='acc-switcher__logout-icon drawer__icon' onClick={this.handleLogout} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    accounts              : PropTypes.object,\n    display               : PropTypes.string,\n    has_fiat              : PropTypes.bool,\n    has_mt5_login         : PropTypes.bool,\n    hideDialog            : PropTypes.func,\n    is_loading_mt5        : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_mt5_allowed        : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    mt5_login_list        : PropTypes.array,\n    obj_total_balance     : PropTypes.object,\n    toggle                : PropTypes.func,\n    toggleAccountsDialog  : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    updateMt5LoginList    : PropTypes.func,\n};\n\nconst account_switcher = withRouter(connect(\n    ({ client, ui }) => ({\n        account_loginid       : client.loginid,\n        accounts              : client.accounts,\n        has_fiat              : client.has_fiat,\n        can_change_currency   : client.can_change_currency,\n        account_list          : client.account_list,\n        can_upgrade           : client.can_upgrade,\n        can_upgrade_to        : client.can_upgrade_to,\n        has_mt5_login         : client.has_mt5_login,\n        is_loading_mt5        : client.is_populating_mt5_account_list,\n        is_logged_in          : client.is_logged_in,\n        is_mt5_allowed        : client.is_mt5_allowed,\n        is_virtual            : client.is_virtual,\n        mt5_login_list        : client.mt5_login_list,\n        obj_total_balance     : client.obj_total_balance,\n        switchAccount         : client.switchAccount,\n        logoutClient          : client.logout,\n        updateMt5LoginList    : client.updateMt5LoginList,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        openRealAccountSignup : ui.openRealAccountSignup,\n        toggleAccountsDialog  : ui.toggleAccountsDialog,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n    }),\n)(AccountSwitcher));\n\nexport { account_switcher as AccountSwitcher };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { Localize }        from 'deriv-translations';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport Icon                from 'Assets/icon.jsx';\n\n// todo fix absolute path\n\nclass AccountInfo extends React.Component {\n    state = {\n        display: 'none',\n    };\n\n    showDialog = () => {\n        this.setState({ display: 'block' });\n    };\n\n    hideDialog = () => {\n        this.setState({ display: 'none' });\n    };\n\n    render() {\n        const {\n            balance,\n            currency,\n            is_dialog_on,\n            is_upgrade_enabled,\n            is_virtual,\n            toggleDialog,\n        } = this.props;\n\n        return (\n            <div className='acc-info__wrapper'>\n                <div className='acc-info__separator' />\n                <div\n                    className={classNames('acc-info', {\n                        'acc-info--show'      : is_dialog_on,\n                        'acc-info--is-virtual': is_virtual,\n                    })}\n                    onClick={toggleDialog}\n                >\n                    <span\n                        className='acc-info__id'\n                    >\n                        <Icon\n                            icon='IconAccountsCurrency'\n                            className={`acc-info__id-icon acc-info__id-icon--${is_virtual ? 'virtual' : currency}`}\n                            type={is_virtual ? 'virtual' : (currency || 'real').toLowerCase()}\n                        />\n                    </span>\n                    {\n                        typeof balance !== 'undefined' &&\n                        <p className='acc-info__balance'>\n                            <span\n                                className={classNames('symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })}\n                            />\n                            {!currency &&\n                            <Localize\n                                i18n_default_text='No currency assigned'\n                            />\n                            }\n                            {currency && balance}\n                        </p>\n                    }\n                    <Icon icon='IconArrowBold' className='acc-info__select-arrow' />\n                </div>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={200}\n                    classNames={{\n                        enter    : 'acc-switcher__wrapper--enter',\n                        enterDone: 'acc-switcher__wrapper--enter-done',\n                        exit     : 'acc-switcher__wrapper--exit',\n                    }}\n                    onEntered={this.showDialog}\n                    unmountOnExit\n                >\n                    <div className='acc-switcher__wrapper'>\n                        <AccountSwitcher\n                            is_visible={is_dialog_on}\n                            hideDialog={this.hideDialog}\n                            display={this.state.display}\n                            toggle={toggleDialog}\n                            is_upgrade_enabled={is_upgrade_enabled}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    toggleDialog      : PropTypes.func,\n};\n\nexport default AccountInfo;\n"],"sourceRoot":""}