{"version":3,"sources":["webpack:///./templates/_common/components/loading.jsx","webpack:///./Modules/Cashier/Components/Error/error.jsx","webpack:///./Modules/Cashier/Components/Error/virtual.jsx","webpack:///./Modules/Cashier/Components/Error/no-balance.jsx","webpack:///./Modules/Cashier/Components/cashier-container.jsx","webpack:///./Modules/Cashier/Components/Email/email-sent.jsx","webpack:///./Modules/Cashier/Components/withdraw.jsx","webpack:///./Modules/Cashier/Components/Email/send-email.jsx","webpack:///./Modules/Cashier/Containers/withdrawal.jsx"],"names":["Loading","className","is_invisible","theme","id","classNames","invisible","Array","from","map","x","inx","key","onClickButton","button_text","footer","header","message","button_link","Error","address_line_1","address_postcode","localize","address_state","email","phone","residence","clearErrorMessage","acceptTNC","tncApproval","AccountError","props","details","error_fields","join","interpolation","escapeValue","propTypes","error","connect","setErrorMessage","modules","cashier","history","trade","has_real_account","width","a","client","has_any_real_account","openRealAccountSignup","Virtual","render","currency","NoBalance","setModalIndex","withRouter","CashierContainer","position","height","iframe_height","display","iframe_url","PropTypes","string","is_loading","setVerificationResendClicked","this","EmailSent","is_resend_clicked","resend_timeout","seconds","resendVerificationEmail","sendVerificationEmail","Withdraw","setActiveTab","container","onMount","verification_code","React","Component","oneOfType","number","bool","func","payment_withdraw","config","withdraw","SendEmail","is_email_sent","Withdrawal","is_virtual","balance","object"],"mappings":"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","file":"js/core.cashier-withdrawal.07e632a3fe9f546084da.js","sourcesContent":["import classNames from 'classnames';\nimport React      from 'react';\n\nconst Loading = ({ className, is_invisible, theme, id }) => (\n    <div\n        id={id}\n        className={\n            classNames(\n                'barspinner',\n                `barspinner--${ theme || 'dark'}`,\n                { invisible: is_invisible },\n                className,\n            )\n        }\n    >\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { Button }             from 'deriv-components';\nimport ButtonLink             from 'App/Components/Routes/button-link.jsx';\nimport { localize, Localize } from 'deriv-translations';\nimport Icon                   from 'Assets/icon.jsx';\nimport { WS }                 from 'Services';\nimport { connect }            from 'Stores/connect';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    button_link,\n    onClickButton,\n    button_text,\n    footer,\n}) => (\n    <div className='cashier__wrapper cashier__center-align-wrapper'>\n        <div className='cashier__center-align-content'>\n            <Icon icon='IconCashierError' className='cashier-error__icon' />\n            {header && <h2 className='cashier-error__header'>{header}</h2>}\n            {message && <p className='cashier__paragraph'>{message}</p>}\n            {button_link &&\n            <ButtonLink\n                className='cashier-error__button'\n                to={button_link}\n                onClick={onClickButton}\n                primary\n                large\n            >\n                <span className='btn__text'>{button_text}</span>\n            </ButtonLink>\n            }\n            {!button_link && button_text &&\n                <Button\n                    className='cashier-error__button'\n                    onClick={onClickButton}\n                    text={button_text}\n                    primary\n                    large\n                />\n            }\n            {footer && <h2 className='cashier-error__footer'>{footer}</h2>}\n        </div>\n    </div>\n);\n\nclass Error extends React.Component {\n    error_fields = {\n        address_city    : localize('Town/City'),\n        address_line_1  : localize('First line of home address'),\n        address_postcode: localize('Postal Code/ZIP'),\n        address_state   : localize('State/Province'),\n        email           : localize('Email address'),\n        phone           : localize('Telephone'),\n        residence       : localize('Country of Residence'),\n    };\n\n    onClickButton = () => {\n        if (typeof this.props.error.onClickButton === 'function') {\n            this.props.error.onClickButton();\n        }\n        this.clearErrorMessage();\n    }\n\n    clearErrorMessage = () => {\n        this.props.setErrorMessage('');\n    };\n\n    acceptTNC = async () => {\n        await WS.tncApproval();\n        this.onClickButton();\n    };\n\n    render() {\n        let AccountError;\n        switch (this.props.error.code) {\n            case 'InvalidToken':\n                AccountError = (\n                    <ErrorComponent\n                        header={localize('Identity confirmation failed')}\n                        message={<Localize i18n_default_text='It looks like your link is incorrect or no longer valid.' />}\n                        onClickButton={this.onClickButton}\n                        button_text={localize('Request a new link')}\n                    />\n                );\n                break;\n            case 'ASK_TNC_APPROVAL':\n                AccountError = (\n                    <ErrorComponent\n                        header={localize('Our terms and conditions have changed')}\n                        message={\n                            <Localize\n                                i18n_default_text='Please accept our updated <0>terms and conditions</0> to continue.'\n                                components={[ (\n                                    <a\n                                        key={0}\n                                        className='link'\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.deriv.com/terms-and-conditions/#general'\n                                    />\n                                ) ]}\n                            />\n                        }\n                        onClickButton={this.acceptTNC}\n                        button_text={localize('I accept')}\n                    />\n                );\n                break;\n            case 'ASK_FIX_DETAILS':\n                AccountError = (\n                    <ErrorComponent\n                        header={localize('Update your personal details')}\n                        message={\n                            <React.Fragment>\n                                <Localize i18n_default_text={'We can\\'t validate your personal details because there is some information missing.'} />&nbsp;\n                                {this.props.error.fields ?\n                                    <Localize\n                                        i18n_default_text={'Please update your {{details}} to continue.'}\n                                        values={{\n                                            details      : this.props.error.fields.map(field => (this.error_fields[field] || field)).join(', '),\n                                            interpolation: { escapeValue: false },\n                                        }}\n                                    />\n                                    :\n                                    <Localize i18n_default_text={'Please update your details to continue.'} />\n                                }\n                            </React.Fragment>\n                        }\n                        button_link='/account/personal-details'\n                        onClickButton={this.onClickButton}\n                        button_text={localize('Update my details')}\n                        footer={\n                            <Localize\n                                i18n_default_text='Need help? <0>Contact us</0>.'\n                                components={[ (\n                                    <a\n                                        key={0}\n                                        className='link'\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://www.deriv.com/help-centre/'\n                                    />\n                                ) ]}\n                            />\n                        }\n                    />\n                );\n                break;\n            case 'WrongResponse':\n                AccountError = (\n                    <ErrorComponent\n                        header={this.props.error.message}\n                        onClickButton={this.onClickButton}\n                        button_text={localize('Try again')}\n                    />\n                );\n                break;\n            default:\n                AccountError = <ErrorComponent header={this.props.error.message} />;\n                break;\n        }\n        return AccountError;\n    }\n}\n\nError.propTypes = {\n    error          : PropTypes.object,\n    setErrorMessage: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        setErrorMessage: modules.cashier.setErrorMessage,\n    })\n)(Error);\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { withRouter }         from 'react-router-dom';\nimport {\n    Button,\n    ThemedScrollbars }        from 'deriv-components';\nimport { localize, Localize } from 'deriv-translations';\nimport routes                 from 'Constants/routes';\nimport { connect }            from 'Stores/connect';\n\nclass Virtual extends React.Component {\n    onClickSignup = () => {\n        this.props.history.push(routes.trade);\n        this.props.openRealAccountSignup();\n    };\n\n    render = () => {\n        return (\n            <div className='cashier__wrapper'>\n                <ThemedScrollbars\n                    style={{ position: 'absolute', height: 'calc(100% - 4.8rem)', width: 'calc(100% - 4.8rem)' }}\n                    autoHide\n                    autoHeightMax={550}\n                >\n                    <div className='cashier__virtual-center'>\n                        <h2 className='cashier-error__header cashier__virtual-header'>\n                            <Localize i18n_default_text={'You\\'re currently using a demo account'} />\n                        </h2>\n                        {this.props.has_real_account ?\n                            <React.Fragment>\n                                <p className='cashier__paragraph cashier__text'>\n                                    <Localize i18n_default_text='You need to switch to a real money account to use this feature.' />\n                                    <br />\n                                    <Localize i18n_default_text='You can do this by selecting a real account from the Account Switcher.' />\n                                </p>\n                                <div className='cashier__account-switch-icon' />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <p className='cashier__paragraph cashier__text'>\n                                    <Localize i18n_default_text={'You need a real money account to use this feature. It\\'s easy to create a real money account and start trading.'} />\n                                </p>\n                                <Button\n                                    className='cashier-error__button'\n                                    has_effect\n                                    text={localize('Create my real account')}\n                                    onClick={this.onClickSignup}\n                                    primary\n                                    large\n                                />\n                            </React.Fragment>\n                        }\n                    </div>\n                </ThemedScrollbars>\n            </div>\n        );\n    }\n}\n\nVirtual.propTypes = {\n    has_real_account     : PropTypes.bool,\n    openRealAccountSignup: PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        has_real_account     : client.has_any_real_account,\n        openRealAccountSignup: ui.openRealAccountSignup,\n    })\n)(withRouter(Virtual));\n\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { withRouter }         from 'react-router-dom';\nimport { Button }             from 'deriv-components';\nimport { localize, Localize } from 'deriv-translations';\nimport Icon                   from 'Assets/icon.jsx';\nimport routes                 from 'Constants/routes';\nimport { connect }            from 'Stores/connect';\n\nclass NoBalance extends React.Component {\n    onClickDeposit = () => {\n        // index of deposit tab in the cashier modal is 0\n        this.props.setModalIndex(0);\n        this.props.history.push(routes.cashier_deposit);\n    };\n\n    render = () => {\n        return (\n            <div className='cashier__wrapper cashier__no-balance cashier__center-align-wrapper'>\n                <div className='cashier__center-align-content'>\n                    <Icon icon='IconNoBalance' className='cashier__no-balance-icon' />\n                    <h2 className='withdraw__header'><Localize i18n_default_text='You have no funds in your {{currency}} account' values={{ currency: this.props.currency.toUpperCase() }} /></h2>\n                    <p className='cashier__text'><Localize i18n_default_text='Please make a deposit to use this feature.' /></p>\n                    <Button\n                        className='cashier__no-balance-button'\n                        has_effect\n                        text={localize('Deposit now')}\n                        onClick={this.onClickDeposit}\n                        primary\n                        large\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nNoBalance.propTypes = {\n    currency     : PropTypes.string,\n    setModalIndex: PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        currency     : client.currency,\n        setModalIndex: ui.setModalIndex,\n    })\n)(withRouter(NoBalance));\n\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { ThemedScrollbars } from 'deriv-components';\nimport Loading              from '../../../templates/_common/components/loading.jsx';\n\nclass CashierContainer extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.is_loading && <Loading />}\n                {this.props.iframe_url &&\n                <ThemedScrollbars\n                    style={{ position: 'absolute', height: this.props.iframe_height ? '100%' : 0, width: '100%' }}\n                    autoHide\n                    autoHeightMax={780}\n                    renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                    renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                >\n                    <iframe\n                        className='cashier__content'\n                        height={this.props.iframe_height}\n                        src={this.props.iframe_url}\n                        frameBorder='0'\n                        scrolling='auto'\n                    />\n                </ThemedScrollbars>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nCashierContainer.propTypes = {\n    className    : PropTypes.string,\n    iframe_height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    iframe_url: PropTypes.string,\n    is_loading: PropTypes.bool,\n};\n\nexport default CashierContainer;\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { Button }             from 'deriv-components';\nimport { BinaryLink }         from 'App/Components/Routes';\nimport { localize, Localize } from 'deriv-translations';\nimport Icon                   from 'Assets/icon.jsx';\nimport { connect }            from 'Stores/connect';\n\nclass EmailSent extends React.Component {\n    onClickVerification = () => { this.props.setVerificationResendClicked(true); };\n\n    render() {\n        return (\n            <div className='withdraw__email-sent'>\n                <Icon icon='IconEmailSent' className='withdraw__icon' />\n                <p className='withdraw__email-sent-title'><Localize i18n_default_text={'We\\'ve sent you an email.'} /></p>\n                <p className='withdraw__email-sent-text'><Localize i18n_default_text='Please click on the link in the email to access withdrawal.' /></p>\n                <div className='withdraw__email-resend'>\n                    {this.props.is_resend_clicked ?\n                        <React.Fragment>\n                            <p className='withdraw__email-sent-title withdraw__email-sent-title-sub'><Localize i18n_default_text={'Didn\\'t receive the email?'} /></p>\n                            <p className='withdraw__email-sent-text'><Localize i18n_default_text={'Check your spam or junk folder. If it\\'s not there, try resending the email.'} /></p>\n                            <Button\n                                className='withdraw__resend-button'\n                                classNameSpan='withdraw__resend-button-text'\n                                is_disabled={this.props.resend_timeout < 60}\n                                has_effect\n                                text={this.props.resend_timeout < 60 ? localize('Resend email in {{seconds}}s', { seconds: this.props.resend_timeout }) : localize('Resend email')}\n                                onClick={this.props.resendVerificationEmail}\n                                primary\n                                large\n                            />\n                        </React.Fragment>\n                        :\n                        <BinaryLink className='withdraw__email-resend-text' onClick={this.onClickVerification}>\n                            <Localize i18n_default_text={'Didn\\'t receive the email?'} />\n                        </BinaryLink>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nEmailSent.propTypes = {\n    is_resend_clicked           : PropTypes.bool,\n    resend_timeout              : PropTypes.number,\n    resendVerificationEmail     : PropTypes.func,\n    setVerificationResendClicked: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        resendVerificationEmail     : modules.cashier.resendVerificationEmail,\n        sendVerificationEmail       : modules.cashier.sendVerificationEmail,\n        setVerificationResendClicked: modules.cashier.setVerificationResendClicked,\n    })\n)(EmailSent);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { connect }      from 'Stores/connect';\nimport CashierContainer from './cashier-container.jsx';\n\nclass Withdraw extends React.Component {\n    componentDidMount() {\n        this.props.setActiveTab(this.props.container);\n        this.props.onMount(this.props.verification_code);\n    }\n\n    render() {\n        return (\n            <CashierContainer\n                iframe_height={this.props.iframe_height}\n                iframe_url={this.props.iframe_url}\n                is_loading={this.props.is_loading}\n            />\n        );\n    }\n}\n\nWithdraw.propTypes = {\n    container    : PropTypes.string,\n    iframe_height: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    iframe_url       : PropTypes.string,\n    is_loading       : PropTypes.bool,\n    onMount          : PropTypes.func,\n    setActiveTab     : PropTypes.func,\n    verification_code: PropTypes.string,\n};\n\nexport default connect(\n    ({ client, modules }) => ({\n        verification_code: client.verification_code.payment_withdraw,\n        container        : modules.cashier.config.withdraw.container,\n        iframe_height    : modules.cashier.config.withdraw.iframe_height,\n        iframe_url       : modules.cashier.config.withdraw.iframe_url,\n        is_loading       : modules.cashier.is_loading,\n        setActiveTab     : modules.cashier.setActiveTab,\n        onMount          : modules.cashier.onMount,\n    })\n)(Withdraw);\n","import PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { Button }             from 'deriv-components';\nimport { localize, Localize } from 'deriv-translations';\nimport Icon                   from 'Assets/icon.jsx';\nimport { connect }            from 'Stores/connect';\nimport EmailSent              from './email-sent.jsx';\n\nclass SendEmail extends React.Component {\n    render() {\n        return (\n            <div className='cashier__wrapper'>\n                {this.props.is_email_sent ?\n                    <EmailSent\n                        is_email_sent={this.props.is_email_sent}\n                        is_resend_clicked={this.props.is_resend_clicked}\n                        resend_timeout={this.props.resend_timeout}\n                    />\n                    :\n                    <React.Fragment>\n                        <Icon icon='IconAuthenticateWithdrawals' className='withdraw__icon' />\n                        <p className='withdraw__header'><Localize i18n_default_text='To initiate withdrawal, we need to authenticate you via email.' /></p>\n                        <p className='withdraw__text'><Localize i18n_default_text='This is a safeguard against unauthorised withdrawals from your account.' /></p>\n                        <Button\n                            className='withdraw__verify-button'\n                            has_effect\n                            text={localize('Request authentication email')}\n                            onClick={this.props.sendVerificationEmail}\n                            primary\n                            large\n                        />\n                    </React.Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nSendEmail.propTypes = {\n    is_email_sent        : PropTypes.bool,\n    is_resend_clicked    : PropTypes.bool,\n    resend_timeout       : PropTypes.number,\n    sendVerificationEmail: PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        is_email_sent        : modules.cashier.config.withdraw.verification.is_email_sent,\n        is_resend_clicked    : modules.cashier.config.withdraw.verification.is_resend_clicked,\n        resend_timeout       : modules.cashier.config.withdraw.verification.resend_timeout,\n        sendVerificationEmail: modules.cashier.sendVerificationEmail,\n    })\n)(SendEmail);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport Withdraw    from '../Components/withdraw.jsx';\nimport SendEmail   from '../Components/Email/send-email.jsx';\nimport Error       from '../Components/Error/error.jsx';\nimport NoBalance   from '../Components/Error/no-balance.jsx';\nimport Virtual     from '../Components/Error/virtual.jsx';\n\nclass Withdrawal extends React.Component {\n    componentDidMount() {\n        this.props.setActiveTab(this.props.container);\n    }\n\n    componentWillUnmount() {\n        this.props.setErrorMessage('');\n    }\n\n    render() {\n        if (this.props.verification_code || this.props.iframe_url) {\n            return <Withdraw />;\n        }\n        if (this.props.is_virtual) {\n            return <Virtual />;\n        }\n        if (!+this.props.balance) {\n            return <NoBalance />;\n        }\n        if (this.props.error.message) {\n            return (\n                <Error\n                    error={this.props.error}\n                    container='withdraw'\n                />\n            );\n        }\n        return <SendEmail />;\n    }\n}\n\nWithdrawal.propTypes = {\n    balance          : PropTypes.string,\n    container        : PropTypes.string,\n    error            : PropTypes.object,\n    iframe_url       : PropTypes.string,\n    is_virtual       : PropTypes.bool,\n    setActiveTab     : PropTypes.func,\n    verification_code: PropTypes.string,\n};\n\nexport default connect(\n    ({ client, modules }) => ({\n        balance          : client.balance,\n        is_virtual       : client.is_virtual,\n        verification_code: client.verification_code.payment_withdraw,\n        container        : modules.cashier.config.withdraw.container,\n        error            : modules.cashier.config.withdraw.error,\n        iframe_url       : modules.cashier.config.withdraw.iframe_url,\n        setActiveTab     : modules.cashier.setActiveTab,\n        setErrorMessage  : modules.cashier.setErrorMessage,\n    })\n)(Withdrawal);\n"],"sourceRoot":""}